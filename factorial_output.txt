# For the memoization function we need to populate the 'result' variable with several pre-computed values.

> factorial_mem(14)
[1] 87178291200

Unit: nanoseconds
                 expr   min      lq     mean  median      uq    max neval
   factorial_loop(14)  4668  5137.0  7144.54  5474.0  6026.5  51200   100
 factorial_reduce(14) 46916 49042.5 56763.75 51178.0 57683.5 183636   100
   factorial_func(14)  8129  8936.5 11224.93  9342.5 10026.0  46627   100
    factorial_mem(14)   978  1192.5  2482.71  1418.0  1747.5  53051   100



> factorial_mem(10)
[1] 3628800
   
Unit: nanoseconds
                 expr  min     lq    mean median     uq   max neval
   factorial_loop(10) 3336 3616.5 4403.51 3830.0 4032.5 11795   100
 factorial_reduce(10) 7977 8493.0 9713.51 8885.5 9761.0 28239   100
   factorial_func(10) 5511 5890.0 7198.48 6123.5 6457.5 13811   100
    factorial_mem(10)  969 1051.0 1359.34 1186.5 1372.0 15002   100


factorial_mem(20)
[1] 2.432902e+18

Unit: nanoseconds
                 expr   min      lq     mean  median    uq    max neval
   factorial_loop(20)  6235  6794.5  8335.90  7216.5  7820  15575   100
 factorial_reduce(20) 48080 50210.5 55004.57 51103.5 55916 155318   100
   factorial_func(20) 11744 12389.5 14757.50 13105.5 18658  24618   100
    factorial_mem(20)   987  1139.0  1660.52  1442.5  1698   8138   100
    